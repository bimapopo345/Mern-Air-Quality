{
  "info": {
    "name": "IoT Air Quality Dashboard - Fixed Version",
    "description": "Fixed API collection with proper authentication flow and admin endpoints",
    "version": "3.1.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "device_api_key",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_role",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "1. Login Admin User",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('jwt_token', response.token);",
                  "    pm.environment.set('user_id', response.user.id);",
                  "    pm.environment.set('user_role', response.user.role);",
                  "    console.log('‚úÖ Admin login successful');",
                  "    console.log('Token:', response.token.substring(0, 50) + '...');",
                  "} else {",
                  "    console.log('‚ùå Login failed with status:', pm.response.code);",
                  "    console.log('Response:', pm.response.text());",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@company.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "2. Login Regular User",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('jwt_token', response.token);",
                  "    pm.environment.set('user_id', response.user.id);",
                  "    pm.environment.set('user_role', response.user.role);",
                  "    console.log('‚úÖ User login successful');",
                  "} else {",
                  "    console.log('‚ùå Login failed');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@company.com\",\n  \"password\": \"user123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "3. Get Device API Key",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('device_api_key', response.apiKey);",
                  "    console.log('‚úÖ Device API Key saved');",
                  "    console.log('API Key:', response.apiKey.substring(0, 20) + '...');",
                  "} else {",
                  "    console.log('‚ùå Failed to get API key');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/users/me/api-key/reveal",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "me", "api-key", "reveal"]
            }
          }
        }
      ]
    },
    {
      "name": "üë®‚Äçüíº Admin Endpoints",
      "item": [
        {
          "name": "1. Get Admin Dashboard Stats",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (!pm.environment.get('jwt_token')) {",
                  "    console.log('‚ö†Ô∏è No JWT token found. Please login first.');",
                  "}"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    console.log('‚úÖ Admin dashboard stats retrieved');",
                  "} else if (pm.response.code === 401) {",
                  "    console.log('‚ùå Unauthorized - Please login as admin');",
                  "} else if (pm.response.code === 403) {",
                  "    console.log('‚ùå Forbidden - Admin access required');",
                  "} else {",
                  "    console.log('‚ùå Error:', pm.response.text());",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admin/dashboard",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "dashboard"]
            }
          }
        },
        {
          "name": "2. Get All Users",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ Retrieved', response.users.length, 'users');",
                  "    response.users.forEach(user => {",
                  "        console.log(`- ${user.name} (${user.email}) - ${user.statistics.totalReadings} readings`);",
                  "    });",
                  "} else {",
                  "    console.log('‚ùå Failed to get users:', pm.response.text());",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admin/users?limit=50",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "users"],
              "query": [
                {
                  "key": "limit",
                  "value": "50"
                }
              ]
            }
          }
        },
        {
          "name": "3. Get All Database Data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ Retrieved', response.data.length, 'records');",
                  "    console.log('Total records:', response.pagination.total);",
                  "    console.log('Statistics:', response.statistics);",
                  "} else {",
                  "    console.log('‚ùå Failed to get data:', pm.response.text());",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admin/data/all?limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "data", "all"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "4. Get Specific User Data",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Get first user ID from environment or use a default",
                  "const userId = pm.environment.get('user_id') || '68e0a779899423a2aac28093';",
                  "pm.environment.set('target_user_id', userId);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ Retrieved', response.data.length, 'records for user');",
                  "    console.log('User ID:', pm.environment.get('target_user_id'));",
                  "} else {",
                  "    console.log('‚ùå Failed to get user data:', pm.response.text());",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admin/data/all?user_id={{target_user_id}}&limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "data", "all"],
              "query": [
                {
                  "key": "user_id",
                  "value": "{{target_user_id}}"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          }
        },
        {
          "name": "5. Get API Logs",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ Retrieved', response.logs.length, 'API logs');",
                  "} else {",
                  "    console.log('‚ùå Failed to get logs:', pm.response.text());",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admin/logs?limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "logs"],
              "query": [
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üìä User Data Endpoints",
      "item": [
        {
          "name": "1. Get User Profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    console.log('‚úÖ User profile retrieved');",
                  "} else if (pm.response.code === 401) {",
                  "    console.log('‚ùå Unauthorized - Please login first');",
                  "} else {",
                  "    console.log('‚ùå Error:', pm.response.text());",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/users/me",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "me"]
            }
          }
        },
        {
          "name": "2. Get My Air Quality Data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ Retrieved', response.data.length, 'data records');",
                  "} else {",
                  "    console.log('‚ùå Failed to get data:', pm.response.text());",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/data?limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "data"],
              "query": [
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          }
        },
        {
          "name": "3. Get Latest Data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    console.log('‚úÖ Latest data retrieved');",
                  "} else if (pm.response.code === 404) {",
                  "    console.log('‚ÑπÔ∏è No data found for this user');",
                  "} else {",
                  "    console.log('‚ùå Error:', pm.response.text());",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/data/latest",
              "host": ["{{base_url}}"],
              "path": ["api", "data", "latest"]
            }
          }
        },
        {
          "name": "4. Get Chart Data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ Retrieved', response.data.length, 'chart data points');",
                  "} else {",
                  "    console.log('‚ùå Failed to get chart data:', pm.response.text());",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/data/charts?hours=24",
              "host": ["{{base_url}}"],
              "path": ["api", "data", "charts"],
              "query": [
                {
                  "key": "hours",
                  "value": "24"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üåê IoT Device Data Submission",
      "item": [
        {
          "name": "1. Submit Air Quality Data",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (!pm.environment.get('device_api_key')) {",
                  "    console.log('‚ö†Ô∏è No device API key found. Please get API key first.');",
                  "}"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    console.log('‚úÖ Data submitted successfully');",
                  "} else if (pm.response.code === 401) {",
                  "    console.log('‚ùå Invalid API Key - Please get valid API key');",
                  "} else {",
                  "    console.log('‚ùå Failed to submit data:', pm.response.text());",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-API-Key",
                "value": "{{device_api_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"deviceId\": \"AIR-SENSOR-001\",\n  \"pm25\": 35.2,\n  \"pm10\": 52.8,\n  \"temperature\": 24.5,\n  \"humidity\": 65.3,\n  \"co2\": 720,\n  \"voc\": 2.8,\n  \"aqi\": 95,\n  \"location\": {\n    \"name\": \"Office Floor 1\",\n    \"coordinates\": {\n      \"latitude\": 40.7128,\n      \"longitude\": -74.0060\n    }\n  },\n  \"batteryLevel\": 85.5,\n  \"signalStrength\": -65\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/data",
              "host": ["{{base_url}}"],
              "path": ["api", "data"]
            }
          }
        }
      ]
    },
    {
      "name": "üîç System Status",
      "item": [
        {
          "name": "1. API Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    console.log('‚úÖ API is running');",
                  "    const response = pm.response.json();",
                  "    console.log('Server time:', response.timestamp);",
                  "} else {",
                  "    console.log('‚ùå API is down');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/status",
              "host": ["{{base_url}}"],
              "path": ["api", "status"]
            }
          }
        },
        {
          "name": "2. Health Check",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    console.log('‚úÖ Health check passed');",
                  "} else {",
                  "    console.log('‚ùå Health check failed');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/health",
              "host": ["{{base_url}}"],
              "path": ["api", "health"]
            }
          }
        }
      ]
    }
  ]
}